{"ast":null,"code":"import React from \"react\";\nimport template from \"./Registration.jsx\";\nimport axios from \"axios\";\n\nclass Registration extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: {\n        stu_id: '',\n        stu_name: '',\n        stu_class: '',\n        stu_location: ''\n      },\n      students: []\n    };\n    this.fnUpdate = this.fnUpdate.bind(this);\n    this.fnEdit = this.fnEdit.bind(this);\n  }\n\n  render() {\n    return template.call(this);\n  }\n\n  componentDidMount() {\n    this.fnGetStudents();\n  }\n\n  fn(e) {\n    let value = e.target.value;\n    var id = e.target.id;\n    this.setState({\n      data: { ...this.state.data,\n        [id]: value\n      }\n    });\n  }\n\n  fnreg() {\n    console.log(\"Hello From Fnreg\");\n    console.log(this.state.data);\n    let httpobj = new XMLHttpRequest();\n    httpobj.open('post', \"http://localhost:8001/student/insert-std\");\n    httpobj.setRequestHeader('Content-type', 'application/json');\n    httpobj.send(JSON.stringify(this.state.data));\n\n    httpobj.onload = () => {\n      var res = httpobj.responseText;\n      console.log(httpobj.responseText);\n      res = JSON.parse(res);\n\n      if (res.affectedRows > 0) {\n        alert(\"Success\");\n        this.setState({\n          data: {\n            stu_name: '',\n            stu_location: '',\n            stu_class: ''\n          }\n        });\n        this.fnGetStudents();\n      } else {\n        alert(\"fail...try again\");\n      }\n\n      httpobj.onerror = () => {\n        var res = httpobj.responseText;\n        console.log(httpobj.responseText);\n        alert(\"fail\" + res);\n      };\n    };\n  }\n\n  fnGetStudents() {\n    fetch('http://localhost:8001/student/get-std').then(res => {\n      return res.json();\n    }).then(result => {\n      this.setState({\n        students: result\n      });\n    });\n    console.log(\"students\" + this.state.students);\n  }\n\n  fnDelete(id) {\n    let isOk = window.confirm(\"R u sure..?\");\n\n    if (isOk) {\n      axios.delete(\"http://localhost:8001/student/delete-std?id=\" + id).then(res => {\n        if (res.data.affectedRows > 0) {\n          this.fnGetStudents();\n          alert('Sucess..');\n        } else {\n          alert('failed..');\n        }\n      }).catch(res => {\n        alert('Exception occured');\n      });\n    }\n  }\n\n  fnEdit(obj) {\n    // const {stu_class,stu_location,stu_name} = this.state.data;\n    const {\n      stu_class,\n      stu_location,\n      stu_name,\n      stu_id\n    } = obj;\n    let isok = window.confirm(\"Confirm Edit..\"); // console.log(obj.stu_id)\n\n    if (isok) {\n      this.setState({\n        data: {\n          stu_id: stu_id,\n          stu_name: obj.stu_name,\n          stu_class: obj.stu_class,\n          stu_location: obj.stu_location\n        }\n      });\n    }\n  }\n\n  fnUpdate() {\n    console.log(\"from fn update piyush\"); // const {stu_id,stu_name,stu_class,stu_location} = this.state.data;\n    // let a=JSON.stringify(this.state.data);\n    // console.log(\"from a b c d\"+a);\n\n    fetch(\"http://localhost:8001/student/update-std?stu_id=\" + this.state.data.stu_id, {\n      method: 'PUT',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(this.state.data)\n    }).then(response => response.json()).then(json => {\n      console.log(json);\n      this.fnGetStudents();\n    });\n  }\n\n}\n\nexport default Registration;","map":{"version":3,"sources":["C:/Users/piyush rathod/client/my_first_app/src/Registration/Registration.js"],"names":["React","template","axios","Registration","Component","constructor","state","data","stu_id","stu_name","stu_class","stu_location","students","fnUpdate","bind","fnEdit","render","call","componentDidMount","fnGetStudents","fn","e","value","target","id","setState","fnreg","console","log","httpobj","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","onload","res","responseText","parse","affectedRows","alert","onerror","fetch","then","json","result","fnDelete","isOk","window","confirm","delete","catch","obj","isok","method","headers","body","response"],"mappings":"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","sourcesContent":["import React    from \"react\";\nimport template from \"./Registration.jsx\";\nimport axios from \"axios\";\n\nclass Registration extends React.Component {\n  constructor(){\n    super();\n    this.state={\n      data:{\n        stu_id:'',\n        stu_name:'',\n        stu_class:'',\n        stu_location:'',\n      },\n      students:[],\n    }\n    this.fnUpdate=this.fnUpdate.bind(this);\n    this.fnEdit=this.fnEdit.bind(this);\n\n  }\n  render() {\n    return template.call(this);\n  }\n\n  componentDidMount(){\n    this.fnGetStudents();\n  }\n\n  fn(e){\n let value=e.target.value;\n var id=e.target.id\n\nthis.setState({\n  data:{\n    ...this.state.data,\n    [id]:value \n  }\n})\n\n\n}\nfnreg(){\n  console.log(\"Hello From Fnreg\");\n  console.log(this.state.data);\n  let httpobj = new XMLHttpRequest();\n  httpobj.open('post',\"http://localhost:8001/student/insert-std\");\n  httpobj.setRequestHeader('Content-type','application/json');\n  httpobj.send(JSON.stringify(this.state.data));\n  \n\n  httpobj.onload=()=>{\n    var res = httpobj.responseText;\n    console.log(httpobj.responseText);\n    res = JSON.parse(res);\n    if(res.affectedRows>0){\n      alert(\"Success\");\n      this.setState({\n        data: {\n          \n        stu_name:'',\n        stu_location:'',\n        stu_class:''\n        },\n      });\n      this.fnGetStudents();\n    }else{\n      alert(\"fail...try again\")\n    }\n    httpobj.onerror=()=>{\n      var res = httpobj.responseText;\n      console.log(httpobj.responseText);\n      alert(\"fail\"+res);\n   }\n\n  }\n    \n  }\n fnGetStudents(){\n    fetch('http://localhost:8001/student/get-std')\n    .then((res)=>{\n      return res.json();\n    })\n    .then((result)=>{\n      this.setState({\n        students:result\n      })\n    })\n    console.log(\"students\"+this.state.students);\n  }\n\n  fnDelete (id){\n    let isOk = window.confirm(\"R u sure..?\");\n    if(isOk){\n      axios.delete(\"http://localhost:8001/student/delete-std?id=\"+id)\n      .then((res)=>{\n      \n       if(res.data.affectedRows > 0){\n      \n        this.fnGetStudents();\n        alert('Sucess..');\n     \n        \n       }\n       else{\n         alert('failed..');\n       }\n      })\n      .catch((res)=>{\n        alert('Exception occured');\n        \n      })\n    }\n    \n  }\n\nfnEdit(obj){\n  // const {stu_class,stu_location,stu_name} = this.state.data;\n  const {stu_class,stu_location,stu_name,stu_id} = obj;\n  let isok = window.confirm(\"Confirm Edit..\")\n  // console.log(obj.stu_id)\n  if(isok){\n    this.setState({\n      data:{\n        stu_id:stu_id,\n        stu_name:obj.stu_name,\n        stu_class:obj.stu_class,\n        stu_location:obj.stu_location\n      }\n    })\n \n    }\n}\n\nfnUpdate(){\n  console.log(\"from fn update piyush\")\n  // const {stu_id,stu_name,stu_class,stu_location} = this.state.data;\n  // let a=JSON.stringify(this.state.data);\n  // console.log(\"from a b c d\"+a);\nfetch(\"http://localhost:8001/student/update-std?stu_id=\"+this.state.data.stu_id,\n{\n    method:'PUT',\n    headers:{\n     'Accept':'application/json',\n     'Content-Type':'application/json'\n    },\n    body:JSON.stringify(this.state.data)\n \n   }).then((response)=> response.json())\n   .then((json) =>{\n    console.log(json);\n    this.fnGetStudents();\n    });\n  }\n  \n}\n\nexport default Registration;\n"]},"metadata":{},"sourceType":"module"}