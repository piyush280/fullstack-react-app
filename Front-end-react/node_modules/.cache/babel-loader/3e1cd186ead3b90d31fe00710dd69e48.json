{"ast":null,"code":"import React from \"react\";\nimport template from \"./Registration.jsx\";\n\nclass Registration extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: {\n        name: '',\n        myclass: '',\n        location: ''\n      }\n    };\n  }\n\n  render() {\n    return template.call(this);\n  }\n\n  fn(e) {\n    let value = e.target.value;\n    var id = e.target.id;\n    this.setState({\n      data: { ...this.state.data,\n        [id]: value\n      }\n    }); // console.log(this.state.data);\n  }\n\n  fnreg() {\n    console.log(\"Hello From Fnreg\");\n    console.log(this.state.data);\n    let httpobj = new XMLHttpRequest();\n    httpobj.open('post', \"http://localhost:8001/student/insert-std\");\n    httpobj.setRequestHeader('Content-type', 'application/json');\n    httpobj.send(JSON.stringify(this.state.data));\n\n    httpobj.onload = () => {\n      var res = httpobj.responseText;\n      console.log(httpobj.responseText);\n      res = JSON.parse(res);\n\n      if (res.affectedRows > 0) {\n        alert(\"Success\");\n        this.setState({\n          data: {\n            name: '',\n            location: '',\n            myclass: ''\n          }\n        });\n      } else {\n        alert(\"fail...try again\");\n      }\n\n      httpobj.onerror = () => {\n        var res = httpobj.responseText;\n        console.log(httpobj.responseText);\n        alert(\"fail\" + res);\n      };\n    };\n  }\n\n  fnGetStudents() {\n    fetch('http://localhost:8001/std/get-std').then(res => {\n      return res.json();\n    }).then(result => {\n      this.setState({\n        students: result\n      });\n    });\n    console.log(\"students\" + this.state.students);\n  }\n\n}\n\nexport default Registration;","map":{"version":3,"sources":["C:/Users/piyush rathod/client/my_first_app/src/Registration/Registration.js"],"names":["React","template","Registration","Component","constructor","state","data","name","myclass","location","render","call","fn","e","value","target","id","setState","fnreg","console","log","httpobj","XMLHttpRequest","open","setRequestHeader","send","JSON","stringify","onload","res","responseText","parse","affectedRows","alert","onerror","fnGetStudents","fetch","then","json","result","students"],"mappings":"AAAA,OAAOA,KAAP,MAAqB,OAArB;AACA,OAAOC,QAAP,MAAqB,oBAArB;;AAEA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,IAAI,EAAC;AACHC,QAAAA,IAAI,EAAC,EADF;AAEHC,QAAAA,OAAO,EAAC,EAFL;AAGHC,QAAAA,QAAQ,EAAC;AAHN;AADI,KAAX;AAOD;;AACDC,EAAAA,MAAM,GAAG;AACP,WAAOT,QAAQ,CAACU,IAAT,CAAc,IAAd,CAAP;AACD;;AACDC,EAAAA,EAAE,CAACC,CAAD,EAAG;AACN,QAAIC,KAAK,GAACD,CAAC,CAACE,MAAF,CAASD,KAAnB;AACA,QAAIE,EAAE,GAACH,CAAC,CAACE,MAAF,CAASC,EAAhB;AAED,SAAKC,QAAL,CAAc;AACZX,MAAAA,IAAI,EAAC,EACH,GAAG,KAAKD,KAAL,CAAWC,IADX;AAEH,SAACU,EAAD,GAAKF;AAFF;AADO,KAAd,EAJO,CAUP;AACC;;AACDI,EAAAA,KAAK,GAAE;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWC,IAAvB;AACA,QAAIe,OAAO,GAAG,IAAIC,cAAJ,EAAd;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAa,MAAb,EAAoB,0CAApB;AACAF,IAAAA,OAAO,CAACG,gBAAR,CAAyB,cAAzB,EAAwC,kBAAxC;AACAH,IAAAA,OAAO,CAACI,IAAR,CAAaC,IAAI,CAACC,SAAL,CAAe,KAAKtB,KAAL,CAAWC,IAA1B,CAAb;;AAGAe,IAAAA,OAAO,CAACO,MAAR,GAAe,MAAI;AACjB,UAAIC,GAAG,GAAGR,OAAO,CAACS,YAAlB;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACS,YAApB;AACAD,MAAAA,GAAG,GAAGH,IAAI,CAACK,KAAL,CAAWF,GAAX,CAAN;;AACA,UAAGA,GAAG,CAACG,YAAJ,GAAiB,CAApB,EAAsB;AACpBC,QAAAA,KAAK,CAAC,SAAD,CAAL;AACA,aAAKhB,QAAL,CAAc;AACZX,UAAAA,IAAI,EAAE;AACNC,YAAAA,IAAI,EAAC,EADC;AAENE,YAAAA,QAAQ,EAAC,EAFH;AAGND,YAAAA,OAAO,EAAC;AAHF;AADM,SAAd;AAOD,OATD,MASK;AACHyB,QAAAA,KAAK,CAAC,kBAAD,CAAL;AACD;;AACDZ,MAAAA,OAAO,CAACa,OAAR,GAAgB,MAAI;AAClB,YAAIL,GAAG,GAAGR,OAAO,CAACS,YAAlB;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACS,YAApB;AACAG,QAAAA,KAAK,CAAC,SAAOJ,GAAR,CAAL;AACF,OAJA;AAMD,KAtBD;AAwBC;;AACFM,EAAAA,aAAa,GAAE;AACZC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CACCC,IADD,CACOR,GAAD,IAAO;AACX,aAAOA,GAAG,CAACS,IAAJ,EAAP;AACD,KAHD,EAICD,IAJD,CAIOE,MAAD,IAAU;AACd,WAAKtB,QAAL,CAAc;AACZuB,QAAAA,QAAQ,EAACD;AADG,OAAd;AAGD,KARD;AASApB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAW,KAAKf,KAAL,CAAWmC,QAAlC;AACD;;AAvEwC;;AA4E3C,eAAetC,YAAf","sourcesContent":["import React    from \"react\";\nimport template from \"./Registration.jsx\";\n\nclass Registration extends React.Component {\n  constructor(){\n    super();\n    this.state={\n      data:{\n        name:'',\n        myclass:'',\n        location:'',\n      }\n    }\n  }\n  render() {\n    return template.call(this);\n  }\n  fn(e){\n let value=e.target.value;\n var id=e.target.id\n\nthis.setState({\n  data:{\n    ...this.state.data,\n    [id]:value \n  }\n})\n// console.log(this.state.data);\n}\nfnreg(){\n  console.log(\"Hello From Fnreg\");\n  console.log(this.state.data);\n  let httpobj = new XMLHttpRequest();\n  httpobj.open('post',\"http://localhost:8001/student/insert-std\");\n  httpobj.setRequestHeader('Content-type','application/json');\n  httpobj.send(JSON.stringify(this.state.data));\n  \n\n  httpobj.onload=()=>{\n    var res = httpobj.responseText;\n    console.log(httpobj.responseText);\n    res = JSON.parse(res);\n    if(res.affectedRows>0){\n      alert(\"Success\");\n      this.setState({\n        data: {\n        name:'',\n        location:'',\n        myclass:''\n        },\n      });\n    }else{\n      alert(\"fail...try again\")\n    }\n    httpobj.onerror=()=>{\n      var res = httpobj.responseText;\n      console.log(httpobj.responseText);\n      alert(\"fail\"+res);\n   }\n\n  }\n    \n  }\n fnGetStudents(){\n    fetch('http://localhost:8001/std/get-std')\n    .then((res)=>{\n      return res.json();\n    })\n    .then((result)=>{\n      this.setState({\n        students:result\n      })\n    })\n    console.log(\"students\"+this.state.students);\n  }\n\n\n}\n\nexport default Registration;\n"]},"metadata":{},"sourceType":"module"}